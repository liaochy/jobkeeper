#! /bin/bash
# chkconfig: - 80 90
# description: jobkeeper is a task scheduler service based on zookeeper
# processname: jobkeeper

# Source function library.
. /etc/rc.d/init.d/functions

JOBKEEPER_HOME="/opt/data/jobkeeper"
MAIN_CLASS="com.sohu.dc.jobkeeper.Jobkeeper"
NAME="Jobkeeper"
DESC="Task service"


check_pid(){
  if [ -f "${JOBKEEPER_HOME}/env.sh" ]; then
    . "${JOBKEEPER_HOME}/env.sh"
  fi
  OLD=`ps auxf | grep "${MAIN_CLASS}" | grep "${JOBKEEPER_ID}"|grep -v "grep"| awk '{print $2}'`
  if [ x$OLD != x ] 
    then
      PID=$OLD
      STATUS=`ps aux | grep $PID | grep -v grep | wc -l`
    else
      STATUS=0
      PID=0
  fi
}

start() {
  cd $JOBKEEPER_HOME
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    # Program is running, exit with error code 1.
    echo "Error! $DESC $NAME is currently running!"
    exit 1
  else
    if [ `whoami` = root ]; then
      sh $JOBKEEPER_HOME/start.sh
      echo "$DESC $NAME started"
    fi
  fi
}

stop() {
  cd $JOBKEEPER_HOME
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    ## Program is running, stop it.
    sh $JOBKEEPER_HOME/stop.sh
    echo "$DESC $NAME stopped"
  else
    ## Program is not running, exit with error.
    echo "Error! $DESC $NAME not started!"
    exit 1
  fi
}

restart() {
  cd $JOBKEEPER_HOME
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    echo "Restarting $DESC $NAME..."
    sh $JOBKEEPER_HOME/stop.sh
    if [ `whoami` = root ]; then
	echo "stt..."
      sh $JOBKEEPER_HOME/start.sh
    fi
    echo "$DESC $NAME restarted."
  else
    echo "Error, $NAME not running!"
    exit 1
  fi
}

status() {
  cd $JOBKEEPER_HOME
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    echo "$DESC $NAME with $PID  is running."
  else
    echo "$DESC $NAME is not running."
    exit 1
  fi
}

## Check to see if we are running as root first.
## Found at http://www.cyberciti.biz/tips/shell-root-user-check-script.html
if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root"
    exit 1
fi

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart)
        restart
        ;;
  status)
        status
        ;;
  *)
        echo "Usage: sudo service jobkeeper {start|stop|restart|status}" >&2
        exit 1
        ;;
esac

exit 0
